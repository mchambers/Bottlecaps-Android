android.support.v4.app.BackStackRecord -> android.support.v4.app.m:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> n
    int mExitAnim -> o
    int mPopEnterAnim -> p
    int mPopExitAnim -> q
    int mTransition -> e
    int mTransitionStyle -> f
    boolean mAddToBackStack -> g
    boolean mAllowAddToBackStack -> r
    java.lang.String mName -> h
    boolean mCommitted -> s
    int mIndex -> i
    int mBreadCrumbTitleRes -> j
    java.lang.CharSequence mBreadCrumbTitleText -> k
    int mBreadCrumbShortTitleRes -> l
    java.lang.CharSequence mBreadCrumbShortTitleText -> m
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commitAllowingStateLoss() -> a
    void run() -> run
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.i:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.q:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> K
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> L
    android.os.Bundle mArguments -> g
    android.support.v4.app.Fragment mTarget -> h
    int mTargetIndex -> i
    int mTargetRequestCode -> j
    boolean mAdded -> k
    boolean mRemoving -> l
    boolean mResumed -> m
    boolean mFromLayout -> n
    boolean mInLayout -> o
    boolean mRestored -> p
    int mBackStackNesting -> q
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> r
    android.support.v4.app.FragmentActivity mActivity -> s
    int mFragmentId -> t
    int mContainerId -> u
    java.lang.String mTag -> v
    boolean mHidden -> w
    boolean mDetached -> x
    boolean mRetainInstance -> y
    boolean mRetaining -> z
    boolean mHasMenu -> A
    boolean mMenuVisible -> B
    boolean mCalled -> C
    int mNextAnim -> D
    android.view.ViewGroup mContainer -> E
    android.view.View mView -> F
    android.view.View mInnerView -> G
    boolean mDeferStart -> H
    boolean mUserVisibleHint -> I
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> J
    boolean mLoadersStarted -> M
    boolean mCheckedForLoaderManager -> N
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState() -> a
    void setIndex(int) -> a
    boolean isInBackStack() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void setArguments(android.os.Bundle) -> b
    android.os.Bundle getArguments() -> c
    void setMenuVisibility(boolean) -> a
    void setUserVisibleHint(boolean) -> b
    android.view.LayoutInflater getLayoutInflater$2ee30c11() -> d
    void onInflate$423a76cd() -> e
    void onAttach$63a22f9() -> f
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    android.view.View getView() -> g
    void onActivityCreated$79e5e33f() -> h
    void onResume() -> i
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> j
    void onLowMemory() -> onLowMemory
    void onDestroy() -> k
    void initState() -> l
    void onDetach() -> m
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    void performStart() -> n
    void performStop() -> o
    void performReallyStop() -> p
    void performDestroyView() -> q
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.e:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.c:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    boolean mCreated -> f
    boolean mResumed -> g
    boolean mStopped -> c
    boolean mReallyStopped -> h
    boolean mRetaining -> d
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.app.HCSparseArray mAllLoaderManagers -> e
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> l
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void supportInvalidateOptionsMenu() -> a
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void doReallyStop(boolean) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> b
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    android.support.v4.app.LoaderManagerImpl getLoaderManager$3d2266e4(int) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.w:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.l:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.s:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.app.HCSparseArray loaders -> e
android.support.v4.app.FragmentManager -> android.support.v4.app.g:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.t:
    boolean DEBUG -> a
    boolean HONEYCOMB -> f
    java.util.ArrayList mPendingActions -> g
    java.lang.Runnable[] mTmpActions -> h
    boolean mExecutingActions -> i
    java.util.ArrayList mActive -> b
    java.util.ArrayList mAdded -> c
    java.util.ArrayList mAvailIndices -> j
    java.util.ArrayList mBackStack -> k
    java.util.ArrayList mCreatedMenus -> l
    java.util.ArrayList mBackStackIndices -> m
    java.util.ArrayList mAvailBackStackIndices -> n
    java.util.ArrayList mBackStackChangeListeners -> o
    int mCurState -> d
    android.support.v4.app.FragmentActivity mActivity -> p
    boolean mNeedMenuInvalidate -> q
    boolean mStateSaved -> r
    boolean mDestroyed -> s
    java.lang.String mNoTransactionsBecause -> e
    boolean mHavePendingDeferredStart -> t
    android.os.Bundle mStateBundle -> u
    android.util.SparseArray mStateArray -> v
    java.lang.Runnable mExecCommit -> w
    android.view.animation.Interpolator DECELERATE_QUINT -> x
    android.view.animation.Interpolator DECELERATE_CUBIC -> y
    android.view.animation.Interpolator ACCELERATE_QUINT -> z
    android.view.animation.Interpolator ACCELERATE_CUBIC -> A
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation$376f30fd(float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation$424ea1bd(float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState$2563266(int) -> b
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> v
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void enqueueAction$574583f(java.lang.Runnable) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    boolean execPendingActions() -> d
    void reportBackStackChanged() -> w
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    java.util.ArrayList retainNonConfig() -> e
    void saveFragmentViewState(android.support.v4.app.Fragment) -> c
    android.os.Parcelable saveAllState() -> f
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity) -> a
    void noteStateNotSaved() -> g
    void dispatchCreate() -> h
    void dispatchActivityCreated() -> i
    void dispatchStart() -> j
    void dispatchResume() -> k
    void dispatchPause() -> l
    void dispatchStop() -> m
    void dispatchReallyStop() -> n
    void dispatchDestroy() -> o
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> p
    boolean dispatchCreateOptionsMenu$761f6f92() -> q
    boolean dispatchPrepareOptionsMenu$1eec55b9() -> r
    boolean dispatchOptionsItemSelected$1b88ab4c() -> s
    boolean dispatchContextItemSelected$1b88ab4c() -> t
    void dispatchOptionsMenuClosed$1eec55bd() -> u
    int reverseTransit(int) -> c
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.v:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.u:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.b:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.d:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    android.support.v4.app.Fragment mCurrentPrimaryItem -> c
    android.support.v4.app.Fragment getItem(int) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem$30510aeb(java.lang.Object) -> a
    void setPrimaryItem$30510aeb(java.lang.Object) -> b
    void finishUpdate$52bc874c() -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    java.lang.String makeFragmentName(int,int) -> a
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> c
    int mIndex -> d
    boolean mFromLayout -> e
    int mFragmentId -> f
    int mContainerId -> g
    java.lang.String mTag -> h
    boolean mRetainInstance -> i
    boolean mDetached -> j
    android.os.Bundle mArguments -> k
    android.os.Bundle mSavedFragmentState -> a
    android.support.v4.app.Fragment mInstance -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.o:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTransaction -> android.support.v4.app.j:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commitAllowingStateLoss() -> a
android.support.v4.app.HCSparseArray -> android.support.v4.app.n:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> a
    void remove(int) -> b
    void removeAt(int) -> c
    void gc() -> c
    int size() -> a
    int keyAt(int) -> d
    java.lang.Object valueAt(int) -> e
    void clear() -> b
    int binarySearch$76412d8d(int[],int,int) -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.r:
    boolean hasRunningLoaders() -> h
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.p:
    android.support.v4.content.Loader onCreateLoader$e57f803() -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.f:
    boolean DEBUG -> a
    android.support.v4.app.HCSparseArray mLoaders -> d
    android.support.v4.app.HCSparseArray mInactiveLoaders -> e
    android.support.v4.app.FragmentActivity mActivity -> b
    boolean mStarted -> f
    boolean mRetaining -> c
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> a
    void doStop() -> b
    void doRetain() -> c
    void finishRetain() -> d
    void doReportNextStart() -> e
    void doReportStart() -> f
    void doDestroy() -> g
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    boolean hasRunningLoaders() -> h
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.a:
    int mId -> a
    android.os.Bundle mArgs -> l
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> b
    android.support.v4.content.Loader mLoader -> c
    boolean mHaveData -> d
    boolean mDeliveredData -> e
    java.lang.Object mData -> f
    boolean mStarted -> g
    boolean mRetaining -> h
    boolean mRetainingStarted -> i
    boolean mReportNextStart -> j
    boolean mDestroyed -> m
    boolean mListenerRegistered -> k
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void stop() -> a
    void destroy() -> b
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.h:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.k:
android.support.v4.content.Loader -> android.support.v4.c.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void stopLoading() -> b
    void reset() -> c
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.c.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.a.d:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.a.a:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.a.b:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.a.c:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.util.DebugUtils -> android.support.v4.d.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.d.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.ac:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers$79c6ddc0(android.view.KeyEvent) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.m:
    int metaStateFilterDirectionalModifiers$2e71581f(int,int,int,int) -> a
    int normalizeMetaState(int) -> c
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.aa:
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.q:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.o:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.s:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.d:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> b
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem$30510aeb(java.lang.Object) -> a
    void setPrimaryItem$30510aeb(java.lang.Object) -> b
    void finishUpdate$52bc874c() -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> e
    float mLastKnownPositionOffset -> f
    int mScaledTextSpacing -> g
    boolean mUpdatingText -> h
    boolean mUpdatingPositions -> i
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> j
    int[] ATTRS -> k
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText$7a69ae8(int) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.ad:
    int mScrollState -> a
    android.support.v4.view.PagerTitleStrip this$0 -> b
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected$13462e() -> a
    void onPageScrollStateChanged(int) -> a
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.w:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.f:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.z:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.b:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.x:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.p:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.e:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ab:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.a:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.y:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.t:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.l:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.PagerAdapter mAdapter -> e
    int mCurItem -> f
    int mRestoredCurItem -> g
    android.os.Parcelable mRestoredAdapterState -> h
    java.lang.ClassLoader mRestoredClassLoader -> i
    android.widget.Scroller mScroller -> j
    android.support.v4.view.ViewPager$PagerObserver mObserver -> k
    int mPageMargin -> l
    android.graphics.drawable.Drawable mMarginDrawable -> m
    int mTopPageBounds -> n
    int mBottomPageBounds -> o
    int mChildWidthMeasureSpec -> p
    int mChildHeightMeasureSpec -> q
    boolean mInLayout -> r
    boolean mScrollingCacheEnabled -> s
    boolean mPopulatePending -> t
    boolean mScrolling -> u
    int mOffscreenPageLimit -> v
    boolean mIsBeingDragged -> w
    boolean mIsUnableToDrag -> x
    int mTouchSlop -> y
    float mInitialMotionX -> z
    float mLastMotionX -> A
    float mLastMotionY -> B
    int mActivePointerId -> C
    android.view.VelocityTracker mVelocityTracker -> D
    int mMinimumVelocity -> E
    int mMaximumVelocity -> F
    int mFlingDistance -> G
    boolean mFakeDragging -> H
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> I
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> J
    boolean mFirstLayout -> K
    boolean mCalledSuper -> L
    int mDecorChildCount -> M
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> N
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> O
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> P
    int mScrollState -> Q
    void setScrollState(int) -> a
    void setAdapter(android.support.v4.view.PagerAdapter) -> a
    android.support.v4.view.PagerAdapter getAdapter() -> a
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    void setCurrentItem$2563266(int) -> b
    int getCurrentItem() -> b
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    void addNewItem(int,int) -> a
    void dataSetChanged() -> c
    void populate() -> e
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> c
    void completeScroll() -> f
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> g
    void setScrollingCacheEnabled(boolean) -> a
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean arrowScroll(int) -> d
    boolean pageLeft() -> h
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$100() -> d
android.support.v4.view.ViewPager$1 -> android.support.v4.view.i:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.h:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.v:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.r:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.u:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.k:
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected$13462e() -> a
    void onPageScrollStateChanged(int) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.g:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ae:
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.b.d:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.b.b:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.b.a:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.b.c:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.android.vending.billing.IMarketBillingService -> com.b.a.a.a:
    android.os.Bundle sendBillingRequest(android.os.Bundle) -> a
com.android.vending.billing.IMarketBillingService$Stub -> com.b.a.a.c:
    com.android.vending.billing.IMarketBillingService asInterface(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.android.vending.billing.IMarketBillingService$Stub$Proxy -> com.b.a.a.b:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    android.os.Bundle sendBillingRequest(android.os.Bundle) -> a
com.facebook.android.DialogError -> com.a.a.d:
    int mErrorCode -> a
    java.lang.String mFailingUrl -> b
com.facebook.android.Facebook -> com.a.a.h:
    java.lang.String DIALOG_BASE_URL -> a
    java.lang.String GRAPH_BASE_URL -> b
    java.lang.String RESTSERVER_URL -> c
    java.lang.String mAccessToken -> d
    long mLastAccessUpdate -> e
    long mAccessExpires -> f
    java.lang.String mAppId -> g
    android.app.Activity mAuthActivity -> h
    java.lang.String[] mAuthPermissions -> i
    int mAuthActivityCode -> j
    com.facebook.android.Facebook$DialogListener mAuthDialogListener -> k
    long REFRESH_TOKEN_BARRIER -> l
    void authorize(android.app.Activity,java.lang.String[],com.facebook.android.Facebook$DialogListener) -> a
    boolean startSingleSignOn$66411259(android.app.Activity,java.lang.String,java.lang.String[]) -> a
    boolean validateAppSignatureForPackage(android.content.Context,java.lang.String) -> a
    void startDialogAuth(android.app.Activity,java.lang.String[]) -> a
    void authorizeCallback(int,int,android.content.Intent) -> a
    java.lang.String request(java.lang.String) -> a
    java.lang.String request(java.lang.String,android.os.Bundle) -> a
    java.lang.String request(java.lang.String,android.os.Bundle,java.lang.String) -> a
    boolean isSessionValid() -> a
    java.lang.String getAccessToken() -> b
    long getAccessExpires() -> c
    void setAccessToken(java.lang.String) -> b
    void setAccessExpires(long) -> a
    void setAccessExpiresIn(java.lang.String) -> c
    java.lang.String getAppId() -> d
    com.facebook.android.Facebook$DialogListener access$000(com.facebook.android.Facebook) -> a
com.facebook.android.Facebook$1 -> com.a.a.g:
    com.facebook.android.Facebook this$0 -> a
    void onComplete(android.os.Bundle) -> a
    void onError(com.facebook.android.DialogError) -> a
    void onFacebookError(com.facebook.android.FacebookError) -> a
    void onCancel() -> a
com.facebook.android.Facebook$DialogListener -> com.a.a.c:
    void onComplete(android.os.Bundle) -> a
    void onFacebookError(com.facebook.android.FacebookError) -> a
    void onError(com.facebook.android.DialogError) -> a
    void onCancel() -> a
com.facebook.android.FacebookError -> com.a.a.f:
    int mErrorCode -> a
com.facebook.android.FbDialog -> com.a.a.b:
    float[] DIMENSIONS_DIFF_LANDSCAPE -> a
    float[] DIMENSIONS_DIFF_PORTRAIT -> b
    android.widget.FrameLayout$LayoutParams FILL -> c
    java.lang.String mUrl -> d
    com.facebook.android.Facebook$DialogListener mListener -> e
    android.app.ProgressDialog mSpinner -> f
    android.widget.ImageView mCrossImage -> g
    android.webkit.WebView mWebView -> h
    android.widget.FrameLayout mContent -> i
    void onCreate(android.os.Bundle) -> onCreate
    com.facebook.android.Facebook$DialogListener access$000(com.facebook.android.FbDialog) -> a
    android.app.ProgressDialog access$200(com.facebook.android.FbDialog) -> b
    android.widget.FrameLayout access$300(com.facebook.android.FbDialog) -> c
    android.webkit.WebView access$400(com.facebook.android.FbDialog) -> d
    android.widget.ImageView access$500(com.facebook.android.FbDialog) -> e
com.facebook.android.FbDialog$1 -> com.a.a.e:
    com.facebook.android.FbDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.facebook.android.FbDialog$FbWebViewClient -> com.a.a.i:
    com.facebook.android.FbDialog this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.facebook.android.Util -> com.a.a.a:
    boolean ENABLE_LOG -> a
    java.lang.String encodePostBody(android.os.Bundle,java.lang.String) -> a
    java.lang.String encodeUrl(android.os.Bundle) -> a
    android.os.Bundle decodeUrl(java.lang.String) -> b
    android.os.Bundle parseUrl(java.lang.String) -> a
    java.lang.String openUrl(java.lang.String,java.lang.String,android.os.Bundle) -> a
    java.lang.String read(java.io.InputStream) -> a
    void showAlert(android.content.Context,java.lang.String,java.lang.String) -> a
    void logd(java.lang.String,java.lang.String) -> a
com.getbonkers.bottlecaps.AsyncNetworkDelegate -> com.getbonkers.bottlecaps.g:
com.getbonkers.bottlecaps.Base64 -> com.getbonkers.bottlecaps.r:
    byte[] ALPHABET -> a
    byte[] WEBSAFE_ALPHABET -> b
    byte[] DECODABET -> c
    byte[] WEBSAFE_DECODABET -> d
    boolean $assertionsDisabled -> e
    int decode4to3$355785af(byte[],byte[],int,byte[]) -> a
    byte[] decode(java.lang.String) -> a
com.getbonkers.bottlecaps.Base64DecoderException -> com.getbonkers.bottlecaps.n:
com.getbonkers.bottlecaps.BillingReceiver -> com.getbonkers.bottlecaps.BillingReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.getbonkers.bottlecaps.BillingService -> com.getbonkers.bottlecaps.BillingService:
    com.android.vending.billing.IMarketBillingService mService -> a
    java.util.LinkedList mPendingRequests -> b
    java.util.HashMap mSentRequests -> c
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onStart(android.content.Intent,int) -> onStart
    boolean bindToMarketBillingService() -> e
    boolean confirmNotifications(int,java.lang.String[]) -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    boolean access$000(com.getbonkers.bottlecaps.BillingService) -> a
    java.util.LinkedList access$100() -> a
    com.android.vending.billing.IMarketBillingService access$200() -> b
    java.util.HashMap access$300() -> c
    com.android.vending.billing.IMarketBillingService access$202$3a497d47() -> d
com.getbonkers.bottlecaps.BillingService$BillingRequest -> com.getbonkers.bottlecaps.aw:
    int mStartId -> a
    long mRequestId -> b
    com.getbonkers.bottlecaps.BillingService this$0 -> c
    int getStartId() -> b
    boolean runRequest() -> c
    boolean runIfConnected() -> d
    void onRemoteException(android.os.RemoteException) -> a
    long run() -> a
    android.os.Bundle makeRequestBundle(java.lang.String) -> a
    void logResponseCode$5dc9c75(android.os.Bundle) -> a
com.getbonkers.bottlecaps.BillingService$ConfirmNotifications -> com.getbonkers.bottlecaps.bi:
    java.lang.String[] mNotifyIds -> a
    com.getbonkers.bottlecaps.BillingService this$0 -> b
    long run() -> a
com.getbonkers.bottlecaps.BillingService$GetPurchaseInformation -> com.getbonkers.bottlecaps.k:
    long mNonce -> a
    java.lang.String[] mNotifyIds -> b
    com.getbonkers.bottlecaps.BillingService this$0 -> c
    long run() -> a
    void onRemoteException(android.os.RemoteException) -> a
com.getbonkers.bottlecaps.BoostsActivity -> com.getbonkers.bottlecaps.BoostsActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.getbonkers.bottlecaps.BottlecapsDatabaseAdapter -> com.getbonkers.bottlecaps.av:
    android.content.Context context -> a
    com.getbonkers.bottlecaps.BottlecapsDatabaseAdapter$DatabaseHelper DBHelper -> b
    android.database.sqlite.SQLiteDatabase db -> c
    com.getbonkers.bottlecaps.BottlecapsDatabaseAdapter open() -> a
    void close() -> b
    boolean capIsCollected(long) -> a
    boolean updateSetLastPlayed(long,java.util.Date) -> a
    long insertSet(long,java.lang.String,java.lang.String,java.lang.String) -> a
    long numberOfUniqueCapsCollected() -> c
    long capsCollectedInSet(long) -> b
    long numberOfCapsInDatabase() -> d
    long addCapSettlement(long) -> c
    android.database.Cursor getOutstandingCapSettlements() -> e
    void clearCapSettlements() -> f
    long getRandomSetID() -> g
    long insertCapIntoSet(long,long,int,int,java.lang.String,java.lang.String,int) -> a
    android.database.Cursor getSet(long) -> d
    boolean setExistsInDatabase(long) -> e
    android.database.Cursor getCapsInSet(long) -> f
com.getbonkers.bottlecaps.BottlecapsDatabaseAdapter$DatabaseHelper -> com.getbonkers.bottlecaps.ah:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.getbonkers.bottlecaps.CapManager -> com.getbonkers.bottlecaps.c:
    boolean capManagerInit -> c
    android.content.Context _context -> a
    long circulation -> d
    java.util.Stack capsBuffer -> e
    java.util.Stack boostsBuffer -> f
    java.util.Stack comboCaps -> g
    java.util.ArrayList allCaps -> h
    java.util.ArrayList boostsAvailable -> i
    com.getbonkers.bottlecaps.CapManager$CapDownloadManager downloadManager -> j
    int level -> k
    com.getbonkers.bottlecaps.BottlecapsDatabaseAdapter adapter -> b
    com.getbonkers.bottlecaps.CapManager$Cap currentMostPlayedCap -> l
    int[] combosDelivered -> m
    com.getbonkers.bottlecaps.CapManager$CapManagerDelegate _delegate -> n
    boolean lowMemoryMode -> o
    void onCapSetLoadComplete() -> a
    void putCapInPlay(android.content.Context,com.getbonkers.bottlecaps.CapManager$Cap) -> a
    boolean capSetExistsOnDisk(int) -> a
    boolean capSetExistsInAssets(long) -> a
    void prepNextBoost() -> b
    void removeBoostFromAvailability(com.getbonkers.bottlecaps.CapManager$Boost) -> a
    void prepNextCombo(double) -> a
    void fillCapsBuffer() -> c
    com.getbonkers.bottlecaps.CapManager$Cap getNextCap(boolean) -> a
    com.getbonkers.bottlecaps.CapManager$CapDownloadManager access$100(com.getbonkers.bottlecaps.CapManager) -> a
    com.getbonkers.bottlecaps.CapManager$CapManagerDelegate access$200(com.getbonkers.bottlecaps.CapManager) -> b
com.getbonkers.bottlecaps.CapManager$1 -> com.getbonkers.bottlecaps.at:
    com.getbonkers.bottlecaps.CapManager this$0 -> a
    void onSuccess(java.lang.String) -> a
    void onFailure(java.lang.Throwable) -> a
com.getbonkers.bottlecaps.CapManager$Boost -> com.getbonkers.bottlecaps.ak:
    com.getbonkers.bottlecaps.CapManager this$0 -> k
    void performBoostEffects(com.getbonkers.bottlecaps.GameBoardActivity$GameBoard) -> a
com.getbonkers.bottlecaps.CapManager$Cap -> com.getbonkers.bottlecaps.e:
    int index -> a
    int setNumber -> b
    int resourceId -> c
    long issued -> d
    long available -> e
    long probabilityMin -> f
    long probabilityMax -> g
    int rarityClass -> h
    int numberInPlay -> i
    android.graphics.drawable.BitmapDrawable image -> j
    com.getbonkers.bottlecaps.CapManager this$0 -> k
    void putCapInPlay(android.content.Context,boolean) -> a
com.getbonkers.bottlecaps.CapManager$CapDownloadManager -> com.getbonkers.bottlecaps.f:
    int requestsOutstanding -> c
    java.util.Stack queue -> a
    com.getbonkers.bottlecaps.CapManagerLoadingDelegate delegate -> d
    com.getbonkers.bottlecaps.CapManager this$0 -> b
    boolean loadCapSetFromZip$256a6c9(long) -> b
    void queueSetAssetsForDownload(long) -> a
    void run() -> run
    int access$010(com.getbonkers.bottlecaps.CapManager$CapDownloadManager) -> a
com.getbonkers.bottlecaps.CapManager$CapDownloadManager$1 -> com.getbonkers.bottlecaps.ax:
    long val$setID -> a
    com.getbonkers.bottlecaps.CapManager$CapDownloadManager this$1 -> b
    void onSuccess(java.lang.String) -> a
com.getbonkers.bottlecaps.CapManager$CapDownloadManager$CapDownloadManagerQueueItem -> com.getbonkers.bottlecaps.be:
    long setID -> a
    boolean getAssets -> b
    boolean getData -> c
    com.getbonkers.bottlecaps.CapManager$CapDownloadManager this$1 -> d
com.getbonkers.bottlecaps.CapManager$CapManagerDelegate -> com.getbonkers.bottlecaps.bf:
    void onCapManagerReady() -> b
    void onCapManagerLoadFailure$13462e() -> a
com.getbonkers.bottlecaps.CapManager$CapMaxProbabilityComparator -> com.getbonkers.bottlecaps.ay:
    com.getbonkers.bottlecaps.CapManager this$0 -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.getbonkers.bottlecaps.CapManager$CapTotalAvailableComparator -> com.getbonkers.bottlecaps.af:
    com.getbonkers.bottlecaps.CapManager this$0 -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.getbonkers.bottlecaps.CapManager$HighlightCombosBoost -> com.getbonkers.bottlecaps.au:
    com.getbonkers.bottlecaps.CapManager this$0 -> k
    void putCapInPlay(android.content.Context,boolean) -> a
    void performBoostEffects(com.getbonkers.bottlecaps.GameBoardActivity$GameBoard) -> a
com.getbonkers.bottlecaps.CapManager$MomentumBoost -> com.getbonkers.bottlecaps.an:
    com.getbonkers.bottlecaps.CapManager this$0 -> k
    void putCapInPlay(android.content.Context,boolean) -> a
    void performBoostEffects(com.getbonkers.bottlecaps.GameBoardActivity$GameBoard) -> a
com.getbonkers.bottlecaps.CapManager$TimeBoost -> com.getbonkers.bottlecaps.ar:
    com.getbonkers.bottlecaps.CapManager this$0 -> k
    void putCapInPlay(android.content.Context,boolean) -> a
    void performBoostEffects(com.getbonkers.bottlecaps.GameBoardActivity$GameBoard) -> a
com.getbonkers.bottlecaps.CapManagerLoadingDelegate -> com.getbonkers.bottlecaps.aq:
    void onCapSetLoadComplete() -> a
com.getbonkers.bottlecaps.CapMiniGalleryAdapter -> com.getbonkers.bottlecaps.bd:
    android.content.Context mContext -> a
    java.util.List values -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.getbonkers.bottlecaps.CapSetActivity -> com.getbonkers.bottlecaps.CapSetActivity:
    com.getbonkers.bottlecaps.BottlecapsDatabaseAdapter db -> a
    void onCreate(android.os.Bundle) -> onCreate
com.getbonkers.bottlecaps.CapSetActivity$1 -> com.getbonkers.bottlecaps.j:
    com.getbonkers.bottlecaps.CapSetActivity this$0 -> a
    void onFailure(java.lang.Throwable) -> a
    void onSuccess(java.lang.String) -> a
com.getbonkers.bottlecaps.CapSetListAdapter -> com.getbonkers.bottlecaps.ap:
    android.content.Context context -> a
    java.util.List values -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.content.Context access$000(com.getbonkers.bottlecaps.CapSetListAdapter) -> a
com.getbonkers.bottlecaps.CapSetListAdapter$1 -> com.getbonkers.bottlecaps.ai:
    android.widget.Gallery val$setIcons -> b
    com.getbonkers.bottlecaps.CapSetListAdapter this$0 -> a
    void onSuccess(java.lang.String) -> a
com.getbonkers.bottlecaps.CapSetListAdapter$1$1 -> com.getbonkers.bottlecaps.aa:
    org.json.JSONObject val$set -> a
    com.getbonkers.bottlecaps.CapSetListAdapter$1 this$1 -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.getbonkers.bottlecaps.CapSetsActivity -> com.getbonkers.bottlecaps.CapSetsActivity:
    java.util.ArrayList unlockedSets -> a
    java.util.ArrayList lockedSets -> b
    com.getbonkers.bottlecaps.CapSetListAdapter lockedAdapter -> f
    com.getbonkers.bottlecaps.CapSetListAdapter unlockedAdapter -> c
    android.widget.ListView lv -> d
    android.view.View listHeader -> g
    android.widget.ImageView leftSelector -> h
    android.widget.ImageView rightSelector -> i
    com.getbonkers.bottlecaps.BottlecapsDatabaseAdapter db -> e
    void leftSelectorTapped(android.view.View) -> leftSelectorTapped
    void rightSelectorTapped(android.view.View) -> rightSelectorTapped
    void onCreate(android.os.Bundle) -> onCreate
com.getbonkers.bottlecaps.CapSetsActivity$1 -> com.getbonkers.bottlecaps.v:
    com.getbonkers.bottlecaps.CapSetsActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.getbonkers.bottlecaps.CapSetsActivity$2 -> com.getbonkers.bottlecaps.u:
    com.getbonkers.bottlecaps.CapSetsActivity this$0 -> a
    void onSuccess(java.lang.String) -> a
    void onFailure(java.lang.Throwable) -> a
com.getbonkers.bottlecaps.Consts -> com.getbonkers.bottlecaps.az:
    long BILLING_RESPONSE_INVALID_REQUEST_ID -> a
com.getbonkers.bottlecaps.Consts$PurchaseState -> com.getbonkers.bottlecaps.ao:
    com.getbonkers.bottlecaps.Consts$PurchaseState PURCHASED -> a
    com.getbonkers.bottlecaps.Consts$PurchaseState CANCELED -> b
    com.getbonkers.bottlecaps.Consts$PurchaseState REFUNDED -> c
    com.getbonkers.bottlecaps.Consts$PurchaseState[] $VALUES -> d
    com.getbonkers.bottlecaps.Consts$PurchaseState[] values() -> values
    com.getbonkers.bottlecaps.Consts$PurchaseState valueOf(java.lang.String) -> valueOf
    com.getbonkers.bottlecaps.Consts$PurchaseState valueOf(int) -> a
com.getbonkers.bottlecaps.Consts$ResponseCode -> com.getbonkers.bottlecaps.h:
    com.getbonkers.bottlecaps.Consts$ResponseCode RESULT_OK -> b
    com.getbonkers.bottlecaps.Consts$ResponseCode RESULT_USER_CANCELED -> c
    com.getbonkers.bottlecaps.Consts$ResponseCode RESULT_SERVICE_UNAVAILABLE -> d
    com.getbonkers.bottlecaps.Consts$ResponseCode RESULT_BILLING_UNAVAILABLE -> e
    com.getbonkers.bottlecaps.Consts$ResponseCode RESULT_ITEM_UNAVAILABLE -> f
    com.getbonkers.bottlecaps.Consts$ResponseCode RESULT_DEVELOPER_ERROR -> g
    com.getbonkers.bottlecaps.Consts$ResponseCode RESULT_ERROR -> a
    com.getbonkers.bottlecaps.Consts$ResponseCode[] $VALUES -> h
    com.getbonkers.bottlecaps.Consts$ResponseCode[] values() -> values
    com.getbonkers.bottlecaps.Consts$ResponseCode valueOf(java.lang.String) -> valueOf
    com.getbonkers.bottlecaps.Consts$ResponseCode valueOf(int) -> a
com.getbonkers.bottlecaps.GameBoardActivity -> com.getbonkers.bottlecaps.GameBoardActivity:
    android.app.ProgressDialog dialog -> d
    com.getbonkers.bottlecaps.CapManager capMgr -> a
    com.getbonkers.bottlecaps.GameBoardActivity$GameBoard board -> b
    android.view.View pauseOverlay -> c
    boolean _paused -> e
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onCapManagerLoadFailure$13462e() -> a
    void onCapManagerReady() -> b
    void togglePause(android.view.View) -> togglePause
    void onCreate(android.os.Bundle) -> onCreate
com.getbonkers.bottlecaps.GameBoardActivity$1 -> com.getbonkers.bottlecaps.bg:
    com.getbonkers.bottlecaps.GameBoardActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.getbonkers.bottlecaps.GameBoardActivity$2 -> com.getbonkers.bottlecaps.bh:
    com.getbonkers.bottlecaps.GameBoardActivity this$0 -> a
    void run() -> run
com.getbonkers.bottlecaps.GameBoardActivity$BrainThread -> com.getbonkers.bottlecaps.am:
    android.view.SurfaceHolder _surfaceHolder -> a
    com.getbonkers.bottlecaps.GameBoardActivity$GameBoard _board -> b
    boolean _run -> c
    com.getbonkers.bottlecaps.GameBoardActivity this$0 -> d
    void setRunning(boolean) -> a
    void run() -> run
com.getbonkers.bottlecaps.GameBoardActivity$GameBoard -> com.getbonkers.bottlecaps.as:
    com.getbonkers.bottlecaps.GameBoardActivity$BrainThread _thread -> e
    java.util.ArrayList gamePieces -> a
    java.util.ArrayList currentCombo -> f
    java.util.ArrayList capsCollected -> g
    int boardSize -> h
    int itemsPerRow -> i
    int pieceWidth -> j
    int boardMarginHeight -> k
    int boardMarginWidth -> l
    long lastTick -> m
    int[] comboAmounts -> n
    int currentScore -> o
    double currentMomentum -> b
    double highestMomentum -> p
    int highestComboScore -> q
    int currentLevel -> r
    long[] gameTimers -> c
    long[] timerIntervals -> s
    android.graphics.drawable.BitmapDrawable[] multiplierGfx -> t
    android.graphics.drawable.BitmapDrawable capGlow -> u
    float scorePosition -> v
    long deltaTick -> w
    boolean gameIsPaused -> x
    com.getbonkers.bottlecaps.CapManager capManager -> y
    android.graphics.drawable.BitmapDrawable timerCover -> z
    android.graphics.drawable.BitmapDrawable timerBlue -> A
    android.graphics.Rect timerRect -> B
    android.graphics.Rect multGfxRect -> C
    com.getbonkers.bottlecaps.GameBoardActivity _activity -> d
    android.media.SoundPool soundPool -> D
    java.util.HashMap soundPoolMap -> E
    android.graphics.Paint tp -> F
    android.graphics.Paint text -> G
    android.graphics.Paint textStroke -> H
    android.view.Display display -> I
    android.graphics.drawable.BitmapDrawable bg -> J
    com.getbonkers.bottlecaps.GameBoardActivity this$0 -> K
    void startNewGame(int) -> a
    void togglePause() -> a
    boolean handleTouch(float,float) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void drawGameState(android.graphics.Canvas) -> a
    void access$000(com.getbonkers.bottlecaps.GameBoardActivity$GameBoard) -> a
    boolean access$100(com.getbonkers.bottlecaps.GameBoardActivity$GameBoard,float,float) -> a
com.getbonkers.bottlecaps.GameBoardActivity$GameBoard$1 -> com.getbonkers.bottlecaps.w:
    com.getbonkers.bottlecaps.GameBoardActivity val$this$0 -> a
    com.getbonkers.bottlecaps.GameBoardActivity$GameBoard this$1 -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.getbonkers.bottlecaps.GameBoardActivity$GameBoard$2 -> com.getbonkers.bottlecaps.t:
    com.getbonkers.bottlecaps.GameBoardActivity$GameBoard this$1 -> a
    void run() -> run
com.getbonkers.bottlecaps.GameBoardActivity$GameBoard$GamePiece -> com.getbonkers.bottlecaps.o:
    int state -> a
    boolean terminalState -> b
    double remainingLife -> c
    int opacity -> d
    com.getbonkers.bottlecaps.CapManager$Cap cap -> e
    com.getbonkers.bottlecaps.GameBoardActivity$GameBoard this$1 -> f
    void setDefaultState(int) -> a
    void setTerminalFadingState() -> a
com.getbonkers.bottlecaps.GameMenuActivity -> com.getbonkers.bottlecaps.GameMenuActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onBoostsButtonPressed(android.view.View) -> onBoostsButtonPressed
    void onMyCapsButtonPressed(android.view.View) -> onMyCapsButtonPressed
    void onHelpButtonPressed(android.view.View) -> onHelpButtonPressed
    void onScoreboardButtonPressed(android.view.View) -> onScoreboardButtonPressed
    void onHomeButtonPressed(android.view.View) -> onHomeButtonPressed
com.getbonkers.bottlecaps.GameResultsActivity -> com.getbonkers.bottlecaps.GameResultsActivity:
    com.getbonkers.bottlecaps.Player player -> a
    int scoreInt -> b
    boolean scorePosted -> c
    int level -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void shareOnFacebook(android.view.View) -> shareOnFacebook
    void onMenuButtonClick(android.view.View) -> onMenuButtonClick
    void onBoostsButtonClick(android.view.View) -> onBoostsButtonClick
    void onRestartButtonClick(android.view.View) -> onRestartButtonClick
com.getbonkers.bottlecaps.GameResultsActivity$1 -> com.getbonkers.bottlecaps.b:
    com.getbonkers.bottlecaps.GameResultsActivity this$0 -> a
    void run() -> run
com.getbonkers.bottlecaps.GetBonkersAPI -> com.getbonkers.bottlecaps.x:
    com.loopj.android.http.AsyncHttpClient client -> a
    com.loopj.android.http.PersistentCookieStore cookieStore -> b
    java.lang.String playerUUID -> c
    void initPersistentCookieStore(android.content.Context) -> a
    boolean havePlayerUUID(android.content.Context) -> b
    java.lang.String getPlayerUUID(android.content.Context) -> c
    void setPlayerUUID(java.lang.String,android.content.Context) -> a
    void get$7b3ee8ad(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> a
    void post$7b3ee8ad(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> b
    void postJson(java.lang.String,org.json.JSONObject,android.content.Context,com.loopj.android.http.AsyncHttpResponseHandler) -> a
    java.lang.String getAbsoluteUrl(java.lang.String) -> a
com.getbonkers.bottlecaps.Player -> com.getbonkers.bottlecaps.ba:
    android.content.Context _context -> a
    com.getbonkers.bottlecaps.BottlecapsDatabaseAdapter _db -> b
    com.facebook.android.Facebook facebook -> c
    android.content.SharedPreferences mPrefs -> d
    int capsToNextUnlock() -> a
    void validateFacebookConnection() -> b
    boolean isConnectedToFacebook() -> c
    void postScore(long) -> a
    void reconcileCollectedCaps(com.getbonkers.bottlecaps.AsyncNetworkDelegate) -> a
    android.content.Context access$000(com.getbonkers.bottlecaps.Player) -> a
com.getbonkers.bottlecaps.Player$1 -> com.getbonkers.bottlecaps.ab:
    com.getbonkers.bottlecaps.Player this$0 -> a
com.getbonkers.bottlecaps.Player$PlayerDataReconciler -> com.getbonkers.bottlecaps.aj:
    java.util.Stack _queue -> a
    com.getbonkers.bottlecaps.AsyncNetworkDelegate _delegate -> b
    int requestsOutstanding -> c
    com.getbonkers.bottlecaps.Player this$0 -> d
    void addBatchQueueItem$4871057d(long[]) -> a
    void run() -> run
    int access$110(com.getbonkers.bottlecaps.Player$PlayerDataReconciler) -> a
com.getbonkers.bottlecaps.Player$PlayerDataReconciler$1 -> com.getbonkers.bottlecaps.l:
    com.getbonkers.bottlecaps.Player$PlayerDataReconciler this$1 -> a
    void onSuccess(java.lang.String) -> a
    void onFailure(java.lang.Throwable) -> a
com.getbonkers.bottlecaps.Player$PlayerDataReconciler$DataReconcilerQueueItem -> com.getbonkers.bottlecaps.i:
    int type -> a
    long[] IDs -> b
    com.getbonkers.bottlecaps.Player$PlayerDataReconciler this$1 -> c
com.getbonkers.bottlecaps.PurchaseObserver -> com.getbonkers.bottlecaps.z:
    android.os.Handler mHandler -> a
    java.lang.Class[] START_INTENT_SENDER_SIG -> b
    void postPurchaseStateChange$414b40f0(com.getbonkers.bottlecaps.Consts$PurchaseState,java.lang.String,long,java.lang.String) -> a
com.getbonkers.bottlecaps.PurchaseObserver$1 -> com.getbonkers.bottlecaps.ag:
    com.getbonkers.bottlecaps.Consts$PurchaseState val$purchaseState -> a
    java.lang.String val$itemId -> b
    int val$quantity -> c
    long val$purchaseTime -> d
    java.lang.String val$developerPayload -> e
    com.getbonkers.bottlecaps.PurchaseObserver this$0 -> f
    void run() -> run
com.getbonkers.bottlecaps.ResponseHandler -> com.getbonkers.bottlecaps.bj:
    com.getbonkers.bottlecaps.PurchaseObserver sPurchaseObserver -> a
    com.getbonkers.bottlecaps.PurchaseObserver access$000() -> a
com.getbonkers.bottlecaps.ResponseHandler$1 -> com.getbonkers.bottlecaps.al:
    com.getbonkers.bottlecaps.Consts$PurchaseState val$purchaseState -> a
    java.lang.String val$productId -> b
    long val$purchaseTime -> c
    java.lang.String val$developerPayload -> d
    void run() -> run
com.getbonkers.bottlecaps.ScoreboardActivity -> com.getbonkers.bottlecaps.ScoreboardActivity:
    java.util.ArrayList allScores -> a
    java.util.ArrayList friendScores -> b
    com.getbonkers.bottlecaps.ScoreboardListAdapter allAdapter -> c
    com.getbonkers.bottlecaps.ScoreboardListAdapter friendAdapter -> h
    com.facebook.android.Facebook facebook -> d
    android.widget.ImageView leftSelector -> i
    android.widget.ImageView rightSelector -> j
    android.content.SharedPreferences mPrefs -> e
    android.app.ProgressDialog wait -> f
    int mode -> g
    void leftSelectorTapped(android.view.View) -> leftSelectorTapped
    void rightSelectorTapped(android.view.View) -> rightSelectorTapped
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void connectFacebook(android.view.View) -> connectFacebook
    void callForScoreUpdates(java.lang.String) -> a
    void updateScoreboard() -> a
    void onCreate(android.os.Bundle) -> onCreate
com.getbonkers.bottlecaps.ScoreboardActivity$1 -> com.getbonkers.bottlecaps.ae:
    com.getbonkers.bottlecaps.ScoreboardActivity this$0 -> a
    void onComplete(android.os.Bundle) -> a
    void onFacebookError(com.facebook.android.FacebookError) -> a
    void onError(com.facebook.android.DialogError) -> a
    void onCancel() -> a
com.getbonkers.bottlecaps.ScoreboardActivity$1$1 -> com.getbonkers.bottlecaps.bb:
    com.getbonkers.bottlecaps.ScoreboardActivity$1 this$1 -> a
    void onSuccess(java.lang.String) -> a
    void onFailure(java.lang.Throwable) -> a
com.getbonkers.bottlecaps.ScoreboardActivity$1$1$1 -> com.getbonkers.bottlecaps.d:
    com.getbonkers.bottlecaps.ScoreboardActivity$1$1 this$2 -> a
    void run() -> run
com.getbonkers.bottlecaps.ScoreboardActivity$2 -> com.getbonkers.bottlecaps.ac:
    com.getbonkers.bottlecaps.ScoreboardActivity this$0 -> a
    void onSuccess(java.lang.String) -> a
    void onFailure(java.lang.Throwable) -> a
com.getbonkers.bottlecaps.ScoreboardActivity$2$1 -> com.getbonkers.bottlecaps.bc:
    org.json.JSONObject val$myScoreData -> a
    com.getbonkers.bottlecaps.ScoreboardActivity$2 this$1 -> b
    void run() -> run
com.getbonkers.bottlecaps.ScoreboardActivity$3 -> com.getbonkers.bottlecaps.ad:
    com.getbonkers.bottlecaps.ScoreboardActivity this$0 -> a
    void onSuccess(java.lang.String) -> a
com.getbonkers.bottlecaps.ScoreboardActivity$3$1 -> com.getbonkers.bottlecaps.bl:
    java.lang.String val$response -> a
    com.getbonkers.bottlecaps.ScoreboardActivity$3 this$1 -> b
    void run() -> run
com.getbonkers.bottlecaps.ScoreboardListAdapter -> com.getbonkers.bottlecaps.m:
    android.content.Context context -> a
    java.util.List values -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.getbonkers.bottlecaps.Security -> com.getbonkers.bottlecaps.a:
    java.security.SecureRandom RANDOM -> a
    java.util.HashSet sKnownNonces -> b
    long generateNonce() -> a
    void removeNonce(long) -> a
    java.util.ArrayList verifyPurchase(java.lang.String,java.lang.String) -> a
    java.security.PublicKey generatePublicKey(java.lang.String) -> a
    boolean verify(java.security.PublicKey,java.lang.String,java.lang.String) -> a
com.getbonkers.bottlecaps.Security$VerifiedPurchase -> com.getbonkers.bottlecaps.bk:
    com.getbonkers.bottlecaps.Consts$PurchaseState purchaseState -> a
    java.lang.String notificationId -> b
    java.lang.String productId -> c
    java.lang.String orderId -> f
    long purchaseTime -> d
    java.lang.String developerPayload -> e
com.getbonkers.bottlecaps.SplashScreenActivity -> com.getbonkers.bottlecaps.SplashScreenActivity:
    android.media.SoundPool soundPool -> a
    java.util.HashMap soundPoolMap -> b
    void playSound$13462e() -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onMenuButtonClick(android.view.View) -> onMenuButtonClick
    void startGame(int) -> a
    void onKidsModeClick(android.view.View) -> onKidsModeClick
    void onPlayButtonClick(android.view.View) -> onPlayButtonClick
com.getbonkers.bottlecaps.SplashScreenActivity$1 -> com.getbonkers.bottlecaps.s:
    com.getbonkers.bottlecaps.SplashScreenActivity this$0 -> a
    void onSuccess(java.lang.String) -> a
com.getbonkers.bottlecaps.SplashScreenActivity$1$1 -> com.getbonkers.bottlecaps.p:
    java.lang.String val$newUUID -> a
    com.getbonkers.bottlecaps.SplashScreenActivity$1 this$1 -> b
    void onSuccess(java.lang.String) -> a
    void onFailure(java.lang.Throwable) -> a
com.getbonkers.bottlecaps.TutorialActivity -> com.getbonkers.bottlecaps.TutorialActivity:
    com.getbonkers.bottlecaps.TutorialActivity$TutorialPagerAdapter mAdapter -> f
    android.support.v4.view.ViewPager mPager -> g
    int mode -> h
    int difficulty -> i
    void onCloseButtonClick(android.view.View) -> onCloseButtonClick
    void onCreate(android.os.Bundle) -> onCreate
com.getbonkers.bottlecaps.TutorialActivity$TutorialPagerAdapter -> com.getbonkers.bottlecaps.y:
    int mMode -> a
    int[] mResources -> b
    com.getbonkers.bottlecaps.TutorialActivity this$0 -> c
    int getCount() -> b
    android.support.v4.app.Fragment getItem(int) -> a
com.getbonkers.bottlecaps.TutorialActivity$TutorialPagerAdapter$TutorialPageFragment -> com.getbonkers.bottlecaps.q:
    int imgResource -> K
    com.getbonkers.bottlecaps.TutorialActivity$TutorialPagerAdapter this$1 -> L
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
com.loopj.android.http.AsyncHttpClient -> com.loopj.android.a.b:
    int maxConnections -> a
    int socketTimeout -> b
    org.apache.http.impl.client.DefaultHttpClient httpClient -> c
    org.apache.http.protocol.HttpContext httpContext -> d
    java.util.concurrent.ThreadPoolExecutor threadPool -> e
    java.util.Map requestMap -> f
    void setCookieStore(org.apache.http.client.CookieStore) -> a
    void get(java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> a
    void get(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> a
    void get$7ccc3b(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> c
    void post(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> b
    void post(android.content.Context,java.lang.String,org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> a
    void sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler,android.content.Context) -> a
com.loopj.android.http.AsyncHttpClient$1 -> com.loopj.android.a.i:
    com.loopj.android.http.AsyncHttpClient this$0 -> a
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$2 -> com.loopj.android.a.j:
    com.loopj.android.http.AsyncHttpClient this$0 -> a
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$InflatingEntity -> com.loopj.android.a.a:
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
com.loopj.android.http.AsyncHttpRequest -> com.loopj.android.a.m:
    org.apache.http.impl.client.AbstractHttpClient client -> a
    org.apache.http.protocol.HttpContext context -> b
    org.apache.http.client.methods.HttpUriRequest request -> c
    com.loopj.android.http.AsyncHttpResponseHandler responseHandler -> d
    int executionCount -> e
    void run() -> run
com.loopj.android.http.AsyncHttpResponseHandler -> com.loopj.android.a.c:
    android.os.Handler handler -> a
    void onSuccess(java.lang.String) -> a
    void onFailure(java.lang.Throwable) -> a
    void sendFailureMessage(java.lang.Throwable) -> b
    void sendStartMessage() -> a
    void sendFinishMessage() -> b
    void handleMessage(android.os.Message) -> a
    void sendMessage(android.os.Message) -> b
    android.os.Message obtainMessage(int,java.lang.Object) -> a
    void sendResponseMessage(org.apache.http.HttpResponse) -> a
com.loopj.android.http.AsyncHttpResponseHandler$1 -> com.loopj.android.a.e:
    com.loopj.android.http.AsyncHttpResponseHandler this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.loopj.android.http.PersistentCookieStore -> com.loopj.android.a.d:
    java.util.concurrent.ConcurrentHashMap cookies -> a
    android.content.SharedPreferences cookiePrefs -> b
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    void clear() -> clear
    boolean clearExpired(java.util.Date) -> clearExpired
    java.util.List getCookies() -> getCookies
    java.lang.String encodeCookie(com.loopj.android.http.SerializableCookie) -> a
    org.apache.http.cookie.Cookie decodeCookie(java.lang.String) -> a
    java.lang.String byteArrayToHexString(byte[]) -> a
com.loopj.android.http.RequestParams -> com.loopj.android.a.k:
    java.lang.String ENCODING -> a
    java.util.concurrent.ConcurrentHashMap urlParams -> b
    java.util.concurrent.ConcurrentHashMap fileParams -> c
    void put(java.lang.String,java.lang.String) -> a
    java.lang.String toString() -> toString
    java.lang.String getParamString() -> a
    org.apache.http.HttpEntity getEntity() -> b
    void init() -> c
    java.util.List getParamsList() -> d
com.loopj.android.http.RequestParams$FileWrapper -> com.loopj.android.a.l:
    java.io.InputStream inputStream -> a
    java.lang.String fileName -> c
    java.lang.String contentType -> b
    java.lang.String getFileName() -> a
com.loopj.android.http.RetryHandler -> com.loopj.android.a.h:
    java.util.HashSet exceptionWhitelist -> a
    java.util.HashSet exceptionBlacklist -> b
    int maxRetries -> c
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
com.loopj.android.http.SerializableCookie -> com.loopj.android.a.g:
    org.apache.http.cookie.Cookie cookie -> a
    org.apache.http.impl.cookie.BasicClientCookie clientCookie -> b
    org.apache.http.cookie.Cookie getCookie() -> a
com.loopj.android.http.SimpleMultipartEntity -> com.loopj.android.a.f:
    char[] MULTIPART_CHARS -> a
    java.lang.String boundary -> b
    java.io.ByteArrayOutputStream out -> c
    boolean isSetLast -> d
    boolean isSetFirst -> e
    void writeFirstBoundaryIfNeeds() -> a
    void addPart(java.lang.String,java.lang.String) -> a
    void addPart(java.lang.String,java.lang.String,java.io.InputStream) -> a
    void addPart(java.lang.String,java.lang.String,java.io.InputStream,java.lang.String) -> a
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    boolean isChunked() -> isChunked
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
com.loopj.android.image.SmartImage -> com.loopj.android.image.g:
    android.graphics.Bitmap getBitmap(android.content.Context) -> a
com.loopj.android.image.SmartImageTask -> com.loopj.android.image.f:
    boolean cancelled -> a
    com.loopj.android.image.SmartImageTask$OnCompleteHandler onCompleteHandler -> b
    com.loopj.android.image.SmartImage image -> c
    android.content.Context context -> d
    void run() -> run
    void setOnCompleteHandler(com.loopj.android.image.SmartImageTask$OnCompleteHandler) -> a
    void cancel() -> a
com.loopj.android.image.SmartImageTask$OnCompleteHandler -> com.loopj.android.image.c:
    void handleMessage(android.os.Message) -> handleMessage
    void onComplete(android.graphics.Bitmap) -> a
com.loopj.android.image.SmartImageView -> com.loopj.android.image.SmartImageView:
    java.util.concurrent.ExecutorService threadPool -> a
    com.loopj.android.image.SmartImageTask currentTask -> b
    void setImageUrl(java.lang.String) -> a
com.loopj.android.image.SmartImageView$1 -> com.loopj.android.image.d:
    java.lang.Integer val$fallbackResource -> a
    com.loopj.android.image.SmartImageView this$0 -> b
    void onComplete(android.graphics.Bitmap) -> a
com.loopj.android.image.WebImage -> com.loopj.android.image.e:
    com.loopj.android.image.WebImageCache webImageCache -> a
    java.lang.String url -> b
    android.graphics.Bitmap getBitmap(android.content.Context) -> a
    android.graphics.Bitmap getBitmapFromUrl(java.lang.String) -> a
com.loopj.android.image.WebImageCache -> com.loopj.android.image.a:
    java.util.concurrent.ConcurrentHashMap memoryCache -> a
    java.lang.String diskCachePath -> b
    boolean diskCacheEnabled -> c
    java.util.concurrent.ExecutorService writeThread -> d
    android.graphics.Bitmap get(java.lang.String) -> a
    void put(java.lang.String,android.graphics.Bitmap) -> a
    void cacheBitmapToMemory(java.lang.String,android.graphics.Bitmap) -> b
    java.lang.String getCacheKey(java.lang.String) -> c
    boolean access$000(com.loopj.android.image.WebImageCache) -> a
    java.lang.String access$100(com.loopj.android.image.WebImageCache) -> b
    java.lang.String access$200$2f3efcc6(java.lang.String) -> b
com.loopj.android.image.WebImageCache$1 -> com.loopj.android.image.b:
    java.lang.String val$url -> a
    android.graphics.Bitmap val$bitmap -> b
    com.loopj.android.image.WebImageCache this$0 -> c
    void run() -> run
org.apache.commons.io.IOUtils -> a.a.a.a.a:
    char DIR_SEPARATOR -> a
    java.lang.String LINE_SEPARATOR -> b
    int copy(java.io.InputStream,java.io.OutputStream) -> a
org.apache.commons.io.output.StringBuilderWriter -> a.a.a.a.a.a:
    java.lang.StringBuilder builder -> a
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    void close() -> close
    void flush() -> flush
    void write(java.lang.String) -> write
    void write(char[],int,int) -> write
    java.lang.String toString() -> toString
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
